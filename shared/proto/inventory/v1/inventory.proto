syntax = "proto3";

package inventory.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/Akbar-cmd/raketa-factory/shared/pkg/proto/inventory/v1;inventory_v1";

// InventoryService предоставляет API, отвечающий за хранение и предоставление информации о деталях для сборки космических кораблей
service InventoryService {
  // GetPart возвращает информацию о детали по ее UUID
  rpc GetPart(GetPartRequest) returns (GetPartResponse);

  // ListParts возвращает список деталей с возможностью фильтрации
  rpc ListParts(ListPartsRequest) returns (ListPartsResponse);
}

// GetPartRequest запрос на идентификатор детали
message GetPartRequest {
  // uuid идентификатор детали
  string uuid = 1;
}

// GetPartResponse ответ на запрос идентификатора детали
message GetPartResponse {
  // Информация о детали
  Part part = 1;
}

// ListPartsRequest запрос на список деталей
message ListPartsRequest {
  // Фильтр по деталям (все поля опциональны)
  PartsFilter filter = 1;
}

// ListPartsResponse ответ на запрос списка деталей
message ListPartsResponse {
  repeated Part parts = 1;
}

// PartsFilter фильтр для ListParts
message PartsFilter {
  // Список UUID'ов. Пусто — не фильтруем по UUID
  repeated string uuids = 1;
  // Список имён. Пусто — не фильтруем по имени
  repeated string names = 2;
  // Список категорий. Пусто — не фильтруем по категории
  repeated Category categories = 3;
  // Список стран производителей. Пусто — не фильтруем по стране
  repeated string manufacturer_countries = 4;
  // Список тегов. Пусто — не фильтруем по тегам
  repeated string tags = 5;
}

// Part является списком деталей
message Part {
  // Уникальный идентификатор детали
  string uuid = 1;
  // Название детали
  string name = 2;
  // Описание детали
  string description = 3;
  // Цена за единицу
  double price = 4;
  // Количество на складе
  int64 stock_quantity = 5;
  // Категория
  Category category = 6;
  // Размеры детали
  Dimensions dimensions = 7;
  // Информация о производителе
  Manufacturer manufacturer = 8;
  // Теги для быстрого поиска
  repeated string tags = 9;
  // Гибкие метаданные
  map<string, Value> metadata = 10;
  // Дата создания
  google.protobuf.Timestamp created_at = 11;
  // Дата обновления
  google.protobuf.Timestamp updated_at = 12;
}

// Перечисление категории деталей (одно из)
enum Category {
  // Неизвестная категория
  UNKNOWN = 0;
  // Двигатель
  ENGINE = 1;
  // Топливо
  FUEL = 2;
  // Иллюминатор
  PORTHOLE = 3;
  // Крыло
  WING = 4;
}

// Dimensions - размеры детали
message Dimensions {
  // Длина в см
  double length = 1;
  // Ширина в см
  double width = 2;
  // Высота в см
  double height = 3;
  // Вес в кг
  double weight = 4;
}

// Manufacturer - производитель детали
message Manufacturer {
  // Название
  string name = 1;
  // Страна производства
  string country = 2;
  // Сайт производителя
  string website = 3;
}

// Value описание значения (для metadata)
message Value {
  // Тип значения, один из
  oneof kind {
    // Строковое значение
    string string_value = 1;
    // Целое значение
    int64 int64_value = 2;
    // Дробное значение
    double double_value = 3;
    // Логическое значение
    bool bool_value = 4;
  }
}
